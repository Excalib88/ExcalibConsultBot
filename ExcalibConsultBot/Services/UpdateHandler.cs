using ExcalibConsultBot.DAL;
using ExcalibConsultBot.DAL.Models;
using Telegram.Bot;
using Telegram.Bot.Exceptions;
using Telegram.Bot.Polling;
using Telegram.Bot.Types;
using Telegram.Bot.Types.ReplyMarkups;
using MessageEntity = ExcalibConsultBot.DAL.Models.MessageEntity;

namespace ExcalibConsultBot.Services;

public class UpdateHandler : IUpdateHandler
{
    private readonly ITelegramBotClient _botClient;
    private readonly ILogger<UpdateHandler> _logger;
    private readonly CurrentState _state;
    private readonly long _adminUserId;
    private readonly ConsultDbContext _context;

    public UpdateHandler(ITelegramBotClient botClient, ILogger<UpdateHandler> logger, CurrentState state, IConfiguration configuration, ConsultDbContext context)
    {
        _botClient = botClient;
        _logger = logger;
        _state = state;
        _context = context;
        _adminUserId = configuration.GetSection("BotConfiguration:AdminUserId").Get<long?>() ?? 409698860;
    }

    public async Task HandleUpdateAsync(ITelegramBotClient _, Update update, CancellationToken cancellationToken)
    {
        var handler = update switch
        {
            { Message: { } message } => BotOnMessageReceived(message, cancellationToken),
            _                        => UnknownUpdateHandlerAsync(update)
        };

        await handler;
    }

    private async Task BotOnMessageReceived(Message message, CancellationToken cancellationToken)
    {
        const string rules = "‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å \n \n" +
                             "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª–∏—Ç—Å—è 60 –º–∏–Ω—É—Ç. –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏. –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è. –ï—Å–ª–∏ –∑–∞–Ω—è—Ç–∏–µ –∑–∞–Ω—è–ª–æ –º–µ–Ω—å—à–µ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –æ—Å—Ç–∞–≤—à–∞—è—Å—è —Å—É–º–º–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –Ω–∞ –±—É–¥—É—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ (—Ç–æ –µ—Å—Ç—å –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è –º–æ–∂–Ω–æ –ø–æ–∑–∞–Ω–∏–º–∞—Ç—å—Å—è –¥–æ–ª—å—à–µ). \n \n" +
                             "üí∞ –û–ø–ª–∞—Ç–∞ \n \n" +
                             "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –∫–∞—Ä—Ç—É —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–ø–ª–∞—Ç—ã –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É(–¥–ª—è —é—Ä. –ª–∏—Ü) –Ω—É–∂–Ω–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –∑–∞—Ä–∞–Ω–µ–µ. –û–ø–ª–∞—á–∏–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–Ω—è—Ç–∏—è 100% –æ—Ç —Å—É–º–º—ã. –û–ø–ª–∞—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º –∑–∞ 4 —á–∞—Å–∞ –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è. –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∞, —Ç–æ –∑–∞–Ω—è—Ç–∏–µ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–æ. –ó–∞–Ω—è—Ç–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 4 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. \n \n" +
                             "üíª –ó–∞–Ω—è—Ç–∏–µ \n \n" +
                             "–°—Å—ã–ª–∫—É –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ —è –ø—Ä–∏—Å—ã–ª–∞—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ –Ω–∞—á–∞–ª–∞ –∑–∞–Ω—è—Ç–∏—è. –ó–∞–Ω—è—Ç–∏–µ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –∏ –≤–∏–¥–µ–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏—è –Ω–∞ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ, —Ç–æ —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ —á–∞—Ç–µ. \n \n" +
                             "‚ùå –û—Ç–º–µ–Ω–∞ –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å \n \n" +
                             "–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º –∑–∞ 4 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞. –í —Å–ª—É—á–∞–µ –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–µ–π –æ—Ç–º–µ–Ω—ã –∏–ª–∏ –Ω–µ—è–≤–∫–∏: \n" +
                             "- —É—á–µ–Ω–∏–∫–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—É–º–º–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50% –æ—Ç –æ–ø–ª–∞—á–µ–Ω–Ω–æ–π –∑–∞ –∑–∞–Ω—è—Ç–∏–µ —Å—É–º–º—ã; \n" +
                             "- –º–µ–Ω—è - —É—á–µ–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 50% –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 30 –º–∏–Ω—É—Ç.\n" +
                             "–ï—Å–ª–∏ –∑–∞–Ω—è—Ç–∏–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –º–µ–Ω—å—à–µ, —á–µ–º –∑–∞ 4 —á–∞—Å–∞, —Ç–æ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∏ –ø–µ—Ä–µ–Ω–æ—Å–µ –∑–∞–Ω—è—Ç–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç —à—Ç—Ä–∞—Ñ (–ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤—ã—à–µ). \n \n" +
                             "üèÉ‚Äç‚ôÄÔ∏è–û–ø–æ–∑–¥–∞–Ω–∏–µ \n \n" +
                             "–í —Å–ª—É—á–∞–µ –æ–ø–æ–∑–¥–∞–Ω–∏—è (15 –∏ –±–æ–ª–µ–µ –º–∏–Ω—É—Ç) –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: \n" +
                             "- —É—á–µ–Ω–∏–∫–∞ - –∑–∞–Ω—è—Ç–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –≤ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –æ–ø–ª–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ —ç—Ç–æ–º —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞ –≤—Å—ë –∑–∞–Ω—è—Ç–∏–µ; \n" +
                             "- –º–µ–Ω—è - —É—á–µ–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 50% –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 30 –º–∏–Ω—É—Ç. \n \n" +
                             "–î–∞–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ–Ω—ã –ø—Ä–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏.";
        const string prices = "–¢–∞–∫ –∫–∞–∫ —è —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —É—Å–ª—É–≥—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π, –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è —è —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞ –∑–∞–Ω—è—Ç–∏—è! –ê –∏–º–µ–Ω–Ω–æ 25% —Å–∫–∏–¥–∫–∏! –î–µ–π—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è! –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å 1, 5 –∏–ª–∏ 10 –∑–∞–Ω—è—Ç–∏–π. \n \n" + 
                              "–¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –∑–∞ —á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: \n \n" +
                              "1 –∑–∞–Ω—è—Ç–∏–µ - 3 000 —Ä—É–±–ª–µ–π(–±–µ–∑ —Å–∫–∏–¥–∫–∏ 4000 —Ä—É–±–ª–µ–π) \n" + 
                              "5 –∑–∞–Ω—è—Ç–∏–π - 2 850 —Ä—É–±–ª–µ–π(–±–µ–∑ —Å–∫–∏–¥–∫–∏ 3750 —Ä—É–±–ª–µ–π) \n" +
                              "10 –∑–∞–Ω—è—Ç–∏–π - 2.65 —Ä—É–±–ª–µ–π(–±–µ–∑ —Å–∫–∏–¥–∫–∏ 3550 —Ä—É–±–ª–µ–π)";
        
        _logger.LogInformation("Receive message type: {MessageType}", message.Type);
        var userId = message.From?.Id ?? message.Chat.Id;
        var user = _context.Users.FirstOrDefault(x => x.UserId == userId);
        
        if (user == null)
        {
            user = new UserEntity
            {
                Name = message.From != null ? $"{message.From?.FirstName} {message.From?.LastName}" : $"{message.Chat.FirstName} {message.Chat.LastName}",
                Username = message.From?.Username ?? message.Chat.Username,
                UserId = message.From?.Id
            };

            var userEntity = await _context.Users.AddAsync(user, cancellationToken);
            
            await _context.SaveChangesAsync(cancellationToken);
            user.Id = userEntity.Entity.Id;
        }
        
        await _context.Messages.AddAsync(new MessageEntity
        {
            Text = message.Text,
            Type = message.Type,
            MessageId = message.MessageId,
            UserId = user.Id
        }, cancellationToken);
        
        await _context.SaveChangesAsync(cancellationToken);
        
        if (message.Text is not { } messageText)
            return;

        if (message.Text != "/start")
        {
            if (_state.LastMessages.ContainsKey(message.Chat.Id) && _state.LastMessages[message.Chat.Id] == "/start")
            {
                await _botClient.SendTextMessageAsync(
                    chatId: message.Chat.Id,
                    text: "–°–ø–∞—Å–∏–±–æ! –Ø —Å–∫–æ—Ä–æ —Ç–µ–±–µ –Ω–∞–ø–∏—à—É üòΩ –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –Ω–∞–ø–∏—à–∏—Ç–µ /rules",
                    replyMarkup: new ReplyKeyboardRemove(),
                    cancellationToken: cancellationToken);
            }
            
            if (message.Text == "/rules")
            {
                await _botClient.SendTextMessageAsync(chatId: message.Chat.Id, text: rules, cancellationToken: cancellationToken);
            }
            else if (message.Text == "/prices")
            {
                await _botClient.SendTextMessageAsync(chatId: message.Chat.Id, text: prices, cancellationToken: cancellationToken);
            }
            else
            {
                await _botClient.ForwardMessageAsync(_adminUserId, message.Chat.Id, message.MessageId, cancellationToken: cancellationToken);
            }
            
            _state.AddOrUpdate(message.Chat.Id, messageText);
            return;
        }
        
        const string usage = "–ö—É—Å—å üòΩ –ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞–º–∏—Ä –∏–ª–∏ Excalib –∫–∞–∫ —Ç–µ–±–µ —É–¥–æ–±–Ω–µ–µ. \n" +
                             "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –ø–æ –ø–æ–≤–æ–¥—É –ª–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏. \n –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –∫–∞–∫ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã: \n" +
                             "- —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π \n" +
                             "- —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç \n " +
                             "- –æ–±—ä—è—Å–Ω–∏—Ç—å —Ç–µ–º—É, –∫–æ—Ç–æ—Ä—É—é —Å–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ \n " +
                             "- –ø–æ–º–æ–≥—É —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è \n" +
                             "–¢–∞–∫ –∏ —Å –Ω—é–∞–Ω—Å–∞–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å IT: \n" +
                             "- –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é \n " +
                             "- –ø–æ–º–æ–≥—É —Å —Ä–µ–∑—é–º–µ –∏ —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ –ª—É—á—à–µ –∞–ø–ª–∞–∏—Ç—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏, –ø—Ä–æ–¥—É–º–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é \n" +
                             "- –≤—ã—è–≤–ª—é —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Ç–µ–±—è –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞  \n" +
                             "- —Å–æ—Å—Ç–∞–≤–ª—é –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è \n" +
                             "- –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã \n \n" +
                             "–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –≥–¥–µ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è, –æ–±—Å—É–¥–∏–º —Ç–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∏ –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è –æ –ø–µ—Ä–≤–æ–º —Å–æ–∑–≤–æ–Ω–µ.   –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–± —è –ø–æ–Ω—è–ª —Å–º–æ–≥—É –ª–∏ —è —Ç–µ–±–µ –ø–æ–º–æ—á—å, –æ–ø–∏—à–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É! –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∞—à–µ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?";
        
        var sentMessage = await _botClient.SendTextMessageAsync(
            chatId: message.Chat.Id,
            text: usage,
            replyMarkup: new ReplyKeyboardRemove(),
            cancellationToken: cancellationToken);
        _logger.LogInformation("The message was sent with id: {SentMessageId}", sentMessage.MessageId);
        
        _state.AddOrUpdate(message.Chat.Id, message.Text);
    }

    private Task UnknownUpdateHandlerAsync(Update update)
    {
        _logger.LogInformation("Unknown update type: {UpdateType}", update.Type);
        return Task.CompletedTask;
    }

    public async Task HandlePollingErrorAsync(ITelegramBotClient botClient, Exception exception, CancellationToken cancellationToken)
    {
        var errorMessage = exception switch
        {
            ApiRequestException apiRequestException => $"Telegram API Error:\n[{apiRequestException.ErrorCode}]\n{apiRequestException.Message}",
            _ => exception.ToString()
        };

        _logger.LogInformation("HandleError: {ErrorMessage}", errorMessage);

        if (exception is RequestException)
            await Task.Delay(TimeSpan.FromSeconds(2), cancellationToken);
    }
}